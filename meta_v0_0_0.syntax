## Token

integer:
    (-|+)?[0-9]+

identifier:
    [a-zA-Z_][a-zA-Z_0-9]*

newline:
    "\r"
    "\n"

whitespace:
    "\r"
    "\n"
    "\t"
    "\v"
    "\f"
    " "

basicOperator:
    "+" "-" "*" "/" "//"

logicOperator:
    "&&" "||" "==" "!="


Attribute:
    identifier(".")

DeclBlock:
    StructDecl
    FuncDecl

StructDecl:
    "struct" identifier "{" VarDecl(newline) "}"

FuncDecl:
    "func" identifier "(" VarDecl(",") ")" VarDecl(",") "{" Statement(whitespace) "}"

Type:
    Attribute
    Type "[" "]"   // array type

VarDecl:
    ImplicitVarDecl
    ExplicitVarDecl

ImplicitVarDecl:
    identifier(",") Attribute                   // implicit assign to default value

ExplicitVarDecl:
    identifier(",") Type "=" Value(",")
    identifier(",") "=" Value(",")

Statement:
    VarDecl
    If
    While
    For
    Assignment

If:
    "if" Value "{" Statement(whitespace) "}"
    If "elif" value "{" Statement(whitespace) "}"
    If "else" "{" Statement(whitespace) "}"

While:
    "while" Value "{" Statement(whitespace) "}"

For:
    "for" ForHead; Value; ForTail "{" Statement(whitespace) "}"

ForHead:
    ExplicitVarDecl(",")

ForTail:
    Assignment(",)

Assignment:
    Attribute(,) "=" Value(",")

Value:
    Attribute
    FunctionCall
    "(" Value ")"
    Value binaryOperator Value
    ArrayValue
    ListValue
    DictValue


FunctionCall:
    Attribute "(" Value(",") ")"
    FunctionCall(".")
