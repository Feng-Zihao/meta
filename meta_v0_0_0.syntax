
# Prefixed by:
#
#
# xxx{","}        zero or more xxx separates by ","
# xxx[newline]    one or more xxx separates by matching newline
#

integer:
    (-|+)?[0-9]+

identifier:
    [a-zA-Z_][a-zA-Z_0-9]*

logicalValue:
    "true"
    "false"

newline:
    "\r"
    "\n"

whitespace:
    "\r"
    "\n"
    "\t"
    "\v"
    "\f"
    " "

arithmeticOperator:
    "+"
    "-"
    "*"
    "/"

logicalBinaryOperator:
    "&&"
    "||"
    "=="
    "!="

logicalUnaryOperator:
    "!"

compareOperator:
    ">"
    "<"

bitwiseBinaryOperator:
    "<<<"
    ">>>"    # rotate
    "<<"
    ">>"     # shift
    "^"
    "&"
    "|"

Value:
    "null"
    logicalValue
    integer
    identifier
    "(" Value ")"
    "[" Value "]"
    Value BinaryOperator Value
    UnaryOperator Value
    Value "." identifier "(" Value{","} ")"   # function call

TypeDecl:
    identifier["."]
    "array<" identifier["."] ">"

VarDeclUntypedAssigned:
    identifier[","] "=" Value[","]

VarDeclTypedAssigned:
    TypeDecl identifier[","] "=" Value[","]

VarDeclTypedUnassigned:
    TypeDecl identifier[","]

VarDeclTyped:
    VarDeclTypedAssigned
    VarDeclTypedUnassigned

VarDeclAssigned:
    VarDeclTypedAssigned
    VarDeclUntypedAssigned

VarDecl:
    VarDeclTypedAssigned
    VarDeclTypedUnassigned
    VarDeclUntypedAssigned

Assignment:
    Value[","] "=" Value[","]

StatementBlock:
    "{" Statement{whitespace} "}"

If:
    "if" Value StatementBlock
    If "elif" value StatementBlock
    If "else" StatementBlock

While:
    "while" Value StatementBlock

For:
    "for" VarDeclAssigned{","}  ";" Value ";" Assignment{","} StatementBlock

Assignment:
    Value(",") "=" Value(",")


Statement:
    VarDecl
    If
    While
    For
    Return
    Assignment


StructDecl:
    "struct" identifier "{" VarDecl{newline} "}"

FunctionalOperator:
    "[]"
    arithmeticOperator
    compareOperator
    logicalBinaryOperator
    logicalUnaryOperator
    bitwiseBinaryOperator

FunctionName:
    identifier
    FunctionalOperator

FuncDecl:
    "func" FunctionName "(" VarDecl{","} ")" VarDeclTypedUnassigned StatementBlock

Module:
    StructDecl{newline}
    FuncDecl{newline}
    Module{newline}

